{"version":3,"file":"static/js/573.6b623a70.chunk.js","mappings":"4KACA,EAAuB,uB,UCAvB,EAAyB,yB,SCezB,EAZiB,SAACA,GAChB,IAAIC,EAAO,aAAeD,EAAME,GAChC,OACE,gBAAKC,UAAWC,EAAhB,UACE,UAAC,KAAD,CAASC,GAAIJ,EAAb,WACE,gBAAKK,IAAKN,EAAMO,YAAaC,IAAI,sBAChCR,EAAMS,SAId,ECbD,EAAoG,6BAApG,EAAgJ,kCCchJ,EAXoB,SAACT,GACnB,OACE,iBAAKG,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAhB,UACE,sCAEDJ,EAAMU,iBAGZ,E,UCZD,GAAiB,ECOjB,EAJgB,SAACV,GACf,OAAO,gBAAKG,UAAWC,EAAAA,QAAhB,SAAkCJ,EAAMW,SAChD,ECLD,GAAgB,KAAO,2BAA2B,SAAW,+BAA+B,QAAU,8BAA8B,aAAe,mCAAmC,cAAgB,qC,sCC6BhMC,GAAeC,EAAAA,EAAAA,GAAiB,KAkBhCC,GAAsBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,wBAAjBD,EAhBL,SAACf,GACtB,OACE,kBAAMiB,SAAUjB,EAAMkB,aAAtB,WACE,0BACE,SAACC,EAAA,EAAD,CAAOC,UAAWC,EAAAA,EAAUZ,KAAM,iBAC3Ba,YAAY,UACZC,SAAU,CAACC,EAAAA,EAAUZ,QAG9B,0BACE,yCAIP,IAKD,EA5CqB,SAACZ,GACpB,IAAIyB,EAAmBzB,EAAM0B,aAAaC,KAAI,SAACC,GAC7C,OAAO,SAAC,EAAD,CAASjB,QAASiB,EAAYjB,QAAST,GAAI0B,EAAY1B,IAC/D,IAMD,OACE,iBAAKC,UAAWC,EAAAA,SAAhB,WACE,gBAAKD,UAAWC,EAAAA,cAAhB,UACE,wCAEF,iBAAKD,UAAWC,EAAAA,aAAhB,WACE,eAAIyB,MAAO,CAACC,UAAW,UAAvB,6BACCL,MAEH,SAACX,EAAD,CAAqBG,SAbH,SAACc,GACrB/B,EAAMgC,WAAWD,EAAOE,eACzB,MAcF,ECCD,GAH8BC,E,QAAAA,KAlBL,SAACC,GACxB,MAAO,CACLT,aAAcS,EAAMC,aAAaV,aACjCW,eAAgBF,EAAMC,aAAaC,eAGtC,IAE2B,SAACC,GAC3B,MAAO,CACLN,WAAY,SAACC,GACXK,GAASC,EAAAA,EAAAA,IAAwBN,GAClC,EACDO,gBAAiB,SAACC,GAChBH,GAASI,EAAAA,EAAAA,IAAkCD,GAC5C,EAEJ,GAC6BP,CAC5BS,G,UCCF,EArBiB,SAAC3C,GAChB,IAAMmC,EAAQnC,EAAM4C,MAAMC,WAE1B,IAA0B,IAAtBV,EAAMW,KAAKC,OAAkB,OAAO,SAAC,KAAD,CAAU1C,GAAG,WACrD,IAAIK,EAAiByB,EAAMC,aAAaY,YAAYrB,KAAI,SAACsB,GACvD,OACE,SAAC,EAAD,CACExC,KAAMwC,EAAOxC,KACbP,GAAI+C,EAAO/C,GACXK,YAAa0C,EAAO1C,aAGzB,IACD,OACE,iBAAKJ,UAAWC,EAAhB,WACE,SAAC,EAAD,CAAaM,eAAgBA,KAC7B,SAAC,EAAD,MAGL,C","sources":["webpack://react_project/./src/components/MainContent/Messages/Messages.module.css?4d9d","webpack://react_project/./src/components/MainContent/Messages/DrawDialogs/UserName/UserName.module.css?7d0b","components/MainContent/Messages/DrawDialogs/UserName/UserName.jsx","webpack://react_project/./src/components/MainContent/Messages/DrawDialogs/DrawDialogs.module.css?3952","components/MainContent/Messages/DrawDialogs/DrawDialogs.jsx","components/MainContent/Messages/DrawMessages/Message/Message.module.css","components/MainContent/Messages/DrawMessages/Message/Message.jsx","webpack://react_project/./src/components/MainContent/Messages/DrawMessages/DrawMessages.module.css?3867","components/MainContent/Messages/DrawMessages/DrawMessages.jsx","components/MainContent/Messages/DrawMessages/DrawMessagesContainer.jsx","components/MainContent/Messages/Messages.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"page\":\"Messages_page__VKRC3\",\"messages\":\"Messages_messages__P7NZO\",\"dialogs\":\"Messages_dialogs__hn-+r\",\"dialogHeader\":\"Messages_dialogHeader__Zv2AB\",\"messagesHeder\":\"Messages_messagesHeder__x1p1N\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"UserName_dialog__FpCJa\"};","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport classes from \"./UserName.module.css\";\n\nconst UserName = (props) => {\n  let path = \"/Messages/\" + props.id;\n  return (\n    <div className={classes.dialog}>\n      <NavLink to={path}>\n        <img src={props.dialogImage} alt=\"Image of a person\" />\n        {props.name}\n      </NavLink>\n    </div>\n  );\n};\n\nexport default UserName;\n","// extracted by mini-css-extract-plugin\nexport default {\"page\":\"DrawDialogs_page__RdbRd\",\"messages\":\"DrawDialogs_messages__LfLBP\",\"dialogs\":\"DrawDialogs_dialogs__xqQNK\",\"dialogHeader\":\"DrawDialogs_dialogHeader__NatbT\",\"messagesHeder\":\"DrawDialogs_messagesHeder__uFOMp\"};","import React from \"react\";\n\nimport classes from \"./DrawDialogs.module.css\";\n\nconst DrawDialogs = (props) => {\n  return (\n    <div className={classes.dialogs}>\n      <div className={classes.dialogHeader}>\n        <h1>Dialogs</h1>\n      </div>\n      {props.dialogElements}\n    </div>\n  );\n};\n\nexport default DrawDialogs;\n","// extracted by mini-css-extract-plugin\nexport default {};","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport classes from \"./Message.module.css\";\n\nconst Message = (props) => {\n  return <div className={classes.message}>{props.message}</div>;\n};\n\nexport default Message;\n","// extracted by mini-css-extract-plugin\nexport default {\"page\":\"DrawMessages_page__gY-OB\",\"messages\":\"DrawMessages_messages__+GW7I\",\"dialogs\":\"DrawMessages_dialogs__zhePF\",\"dialogHeader\":\"DrawMessages_dialogHeader__mP+8s\",\"messagesHeder\":\"DrawMessages_messagesHeder__jguIZ\"};","import React from \"react\";\nimport Message from \"./Message/Message\";\nimport classes from \"./DrawMessages.module.css\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../../../common/FormsControl/FormsControl\";\nimport {maxLengthCreator, required} from \"../../../../validator/validator\";\n\nconst DrawMessages = (props) => {\n  let messagesElements = props.messagesData.map((messageItem) => {\n    return <Message message={messageItem.message} id={messageItem.id}/>;\n  });\n\n  const addNewMessage = (values) => {\n    props.addMessage(values.newMessageBody);\n  };\n\n  return (\n    <div className={classes.messages}>\n      <div className={classes.messagesHeder}>\n        <h1>Messages</h1>\n      </div>\n      <div className={classes.dialogWindow}>\n        <h1 style={{textAlign: \"center\"}}>No messages Yet</h1>\n        {messagesElements}\n      </div>\n      <AddMessageFormRedux onSubmit={addNewMessage}/>\n    </div>\n  );\n};\n\nconst maxLength120 = maxLengthCreator(120);\n\nconst AddMessageForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field component={Textarea} name={\"newMessageBody\"}\n               placeholder=\"Message\"\n               validate={[required, maxLength120]}\n        />\n      </div>\n      <div>\n        <button>Send</button>\n      </div>\n    </form>\n  )\n}\n\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(\n  AddMessageForm);\n\nexport default DrawMessages;\n","import React from \"react\";\nimport {\n  addMessageActionCreator,\n  updateNewMessageTextActionCreator\n} from \"../../../../redux/messages-reducer\";\nimport DrawMessages from \"./DrawMessages\";\nimport {connect} from \"react-redux\";\n\nconst mapStateMessages = (state) => {\n  return {\n    messagesData: state.messagesPage.messagesData,\n    newMessageText: state.messagesPage.newMessageText,\n    // isAuth: state.auth.isAuth\n  }\n}\n\nconst mapDispatchMessages = (dispatch) => {\n  return {\n    addMessage: (newMessageBody) => {\n      dispatch(addMessageActionCreator(newMessageBody))\n    },\n    onMessageChange: (text) => {\n      dispatch(updateNewMessageTextActionCreator(text))\n    },\n  }\n}\nconst DrawMessagesContainer = connect(mapStateMessages, mapDispatchMessages)(\n  DrawMessages);\n\nexport default DrawMessagesContainer;\n","import React from \"react\";\nimport classes from \"./Messages.module.css\";\nimport UserName from \"./DrawDialogs/UserName/UserName\";\nimport DrawDialogs from \"./DrawDialogs/DrawDialogs\";\nimport DrawMessagesContainer from \"./DrawMessages/DrawMessagesContainer\";\nimport {Navigate} from \"react-router-dom\";\n\nconst Messages = (props) => {\n  const state = props.store.getState();\n  \n  if (state.auth.isAuth === false) return <Navigate to=\"/Login\"/>;\n  let dialogElements = state.messagesPage.dialogsData.map((dialog) => {\n    return (\n      <UserName\n        name={dialog.name}\n        id={dialog.id}\n        dialogImage={dialog.dialogImage}\n      />\n    );\n  });\n  return (\n    <div className={classes.page}>\n      <DrawDialogs dialogElements={dialogElements}/>\n      <DrawMessagesContainer/>\n    </div>\n  );\n};\n\nexport default Messages;\n\n\n"],"names":["props","path","id","className","classes","to","src","dialogImage","alt","name","dialogElements","message","maxLength120","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","messagesElements","messagesData","map","messageItem","style","textAlign","values","addMessage","newMessageBody","connect","state","messagesPage","newMessageText","dispatch","addMessageActionCreator","onMessageChange","text","updateNewMessageTextActionCreator","DrawMessages","store","getState","auth","isAuth","dialogsData","dialog"],"sourceRoot":""}